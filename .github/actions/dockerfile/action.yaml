name: 'Build Single Dockerfile'
description: 'Build and optionally push a Docker image from a Dockerfile'
inputs:
  dockerfile_path:
    description: 'Path to the Dockerfile directory'
    required: true
  image_name:
    description: 'Image name (e.g., tini, core, python)'
    required: true
  image_tag:
    description: 'Image tag (e.g., v0.19.0, bookworm, 3.11)'
    required: true
  registry:
    description: 'Container registry URL'
    required: true
  registry_username:
    description: 'Registry username'
    required: true
  registry_password:
    description: 'Registry password'
    required: true
  image_repository:
    description: 'Full image repository path (e.g., ghcr.io/owner)'
    required: true
  push:
    description: 'Whether to push the image to the registry'
    required: false
    default: 'false'

runs:
  using: 'composite'
  steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
      with:
        platforms: linux/amd64

    - name: Login to Container Registry
      uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3.6.0
      with:
        registry: ${{ inputs.registry }}
        username: ${{ inputs.registry_username }}
        password: ${{ inputs.registry_password }}

    - name: Generate build metadata
      id: meta
      uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5.8.0
      with:
        images: ${{ inputs.image_repository }}/${{ inputs.image_name }}
        tags: |
          type=raw,value=${{ inputs.image_tag }}
          type=raw,value=${{ inputs.image_tag }}-{{date 'YYYYMMDD'}}
          type=raw,value=${{ inputs.image_tag }}-{{sha}}
        labels: |
          org.opencontainers.image.title=${{ inputs.image_name }}:${{ inputs.image_tag }}
          org.opencontainers.image.description=${{ inputs.image_name }} container image
          org.opencontainers.image.authors=Martin Berwanger
          org.opencontainers.image.version=${{ inputs.image_tag }}
          org.opencontainers.image.source={{url}}
          org.opencontainers.image.revision={{sha}}
          org.opencontainers.image.created={{isotime}}
          org.opencontainers.image.licenses=MIT

    - name: Get Dockerfile directory
      id: dockerfile_dir
      shell: bash
      run: echo "dir=$(dirname '${{ inputs.dockerfile_path }}')" >> $GITHUB_OUTPUT

    - name: Build and push image
      uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
      with:
        context: ${{ steps.dockerfile_dir.outputs.dir }}
        push: ${{ inputs.push == 'true' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=registry,ref=${{ inputs.image_repository }}/${{ inputs.image_name }}:buildcache-${{ inputs.image_tag }}
        cache-to: type=registry,ref=${{ inputs.image_repository }}/${{ inputs.image_name }}:buildcache-${{ inputs.image_tag }},mode=max
        build-args: |
          IMAGE_REPOSITORY=${{ inputs.image_repository }}

    - name: Build summary
      shell: bash
      env:
        TAGS: ${{ steps.meta.outputs.tags }}
        PUSH_ENABLED: ${{ inputs.push }}
      run: |
        echo "üî® Built image with tags:"
        echo "$TAGS" | while read -r tag; do
          if [ -n "$tag" ]; then
            echo "   üì¶ $tag"
          fi
        done

        if [ "$PUSH_ENABLED" == "true" ]; then
          echo "‚úÖ Images pushed to registry"
        else
          echo "‚è≠Ô∏è  Images built but not pushed (PR or non-master branch)"
        fi
